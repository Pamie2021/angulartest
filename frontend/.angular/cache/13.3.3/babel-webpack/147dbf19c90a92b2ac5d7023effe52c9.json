{"ast":null,"code":"import { interval, of } from 'rxjs';\nimport { concatMap, delay, map, take, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./core/components/header/header.component\";\nimport * as i2 from \"@angular/router\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.redTrainsCalled = 0;\n      this.yellowTrainsCalled = 0;\n    }\n\n    ngOnInit() {\n      interval(500).pipe(take(10), map(value => value % 2 === 0 ? 'rouge' : 'jaune'), tap(color => console.log(`La lumière s'allume en %c${color}`, `color: ${this.translateColor(color)}`)), concatMap(color => this.getTrainObservable$(color)), tap(train => console.log(`Train %c${train.color} ${train.trainIndex} arrivé !`, `font-weight: bold; color: ${this.translateColor(train.color)}`))).subscribe();\n    }\n\n    getTrainObservable$(color) {\n      const isRedTrain = color === 'rouge';\n      isRedTrain ? this.redTrainsCalled++ : this.yellowTrainsCalled++;\n      const trainIndex = isRedTrain ? this.redTrainsCalled : this.yellowTrainsCalled;\n      console.log(`Train %c${color} ${trainIndex} appelé !`, `text-decoration: underline; color: ${this.translateColor(color)}`);\n      return of({\n        color,\n        trainIndex\n      }).pipe(delay(isRedTrain ? 5000 : 6000));\n    }\n\n    translateColor(color) {\n      return color === 'rouge' ? 'red' : 'yellow';\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\")(1, \"router-outlet\");\n      }\n    },\n    directives: [i1.HeaderComponent, i2.RouterOutlet],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}